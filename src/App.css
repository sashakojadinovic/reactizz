/* Colors */
/* Fonts */
/* Variables */
/* Reset and Basics */
html {
  height: 100%;
  background-color: #274756;
}
/* Layout */
.container {
  margin: 0 auto;
}
.row {
  display: flex;
}
.col2 {
  flex-basis: 100%;
  position: relative;
}
.block {
  width: 100%;
}
.question-text {
  font-size: 1.1em;
  font-family: 'Roboto';
  text-align: center;
  color: #fff;
}
.shadow {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.2), 0 3px 1px -2px rgba(0, 0, 0, 0.15), 0 1px 5px 0 rgba(0, 0, 0, 0.3);
}
.red {
  background-color: #dc3545 !important;
}
.green {
  background-color: #12a590 !important;
}
.yellow {
  background-color: #f0ad4e !important;
}
/* UI */
.btn {
  font-family: 'Roboto';
  padding: 0 15px;
  font-weight: bold;
  font-size: 15px;
  text-decoration: none;
  color: #fff;
  border-radius: 5px;
  text-align: center;
  letter-spacing: 0.5px;
  border: 1px solid #274756;
}
.btn:focus {
  outline: none;
}
.answer-selected {
  border: 6px solid #f0ad4e;
  outline: none;
}
.btn:hover {
  opacity: 0.8;
}
.answer-btn:active {
  background-color: #f0ad4e;
}
.answer-btn {
  font-size: 1.1em;
  background-color: #178bb8;
  margin: 0;
  height: 60px;
}
.finish-btn {
  border-radius: 50%;
  height: 100px;
  width: 100px;
  font-size: 1.2em;
  color: #274756;
}
.score-btn {
  font-size: 2em;
}
.question-nav {
  margin-top: 30px;
  justify-content: space-between !important;
}
.question-nav-icon {
  height: auto;
  width: 30%;
  color: #f0ad4e;
}
.nav-btn {
  background-color: transparent;
  height: 60px;
  flex-basis: 20%;
}
.selected-btn {
  border: 6px solid #f0ad4e;
}
.answer-points {
  z-index: 2;
  position: absolute;
  right: 6px;
  top: 6px;
  line-height: 18px;
  margin: 0;
  font-family: 'Roboto';
  color: #274756;
  background-color: #f0ad4e;
  padding: 15px;
  font-size: 1.1em;
  font-weight: 700;
  min-width: 30px;
}
@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
  .row {
    display: flex;
    justify-content: space-around;
    flex-wrap: wrap;
  }
  .col2 {
    flex-basis: 50%;
  }
}
/* Test */
.animate {
  transition-property: background-color;
  transition-duration: 0.33s;
}
.animate2 {
  animation-name: example;
  animation-duration: 0.33s;
}
@keyframes example {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
.fade-enter {
  opacity: 0;
  transition: opacity 250ms;
}
.fade-enter-active {
  opacity: 1;
  transition: opacity 250ms;
}
.fade-exit {
  opacity: 0;
  transition: opacity 250ms;
}
